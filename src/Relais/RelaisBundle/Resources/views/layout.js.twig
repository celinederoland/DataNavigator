/**
 * On regarde les options indiquées
 * On appelle la page qui enregistre la recherche en bdd
 * On récupère le json fabriqué par la partie serveur du relais (contrôleur) en lui donnant les options indiquées
 * On appelle la vue (script js) en lui donnant le json fabriqué
 */
(function()
{
	console.log('lancement de layout.js');
	$('#conteneurD3').html('');
	var width = $('#conteneurmenu').innerWidth(), height = $("#conteneurmenu").innerHeight();
	console.log('largeur : ' + width + ' hauteur : ' + height);

	//Recherche pour les informations complementaires
	showWN('{{ path('relais_relais_layoutShowWN') }}');
	showDB('{{ path('relais_relais_layoutShowDB') }}');

	//Récupération des valeurs (layout l150 à 209)

		//Source
		/*********************
			REPERE AJOUTER SOURCE
		**********************/
		var source = [];
		if ($('#wordnet').attr('class') == 'activesource') { source.push('wordnet'); }
		if ($('#dbpedia').attr('class') == 'activesource') { source.push('dbpedia'); }
		if ($('#debian').attr('class') == 'activesource') { source.push('debian'); }
		if ($('#humour').attr('class') == 'activesource') { source.push('humour'); }
		if ($('#getty').attr('class') == 'activesource') { source.push('getty'); }

		//Vue
		/*********************
			REPERE AJOUTER VUE
		**********************/
		var vue = [];
		if ($('#radial').attr('class') == 'activevue') { vue.push('radial'); }
		if ($('#indented').attr('class') == 'activevue') { vue.push('indented'); }
		if ($('#bubble').attr('class') == 'activevue') { vue.push('bubble'); }
		if ($('#force').attr('class') == 'activevue') { vue.push('force'); }
		if ($('#json').attr('class') == 'activevue') { vue.push('json'); }
		if ($('#jsongraph').attr('class') == 'activevue') { vue.push('jsongraph'); }
		if ($('#jsontree').attr('class') == 'activevue') { vue.push('jsontree'); }
		if ($('#matrice').attr('class') == 'activevue') { vue.push('matrice'); }

		//Trouver un agencement :
		var nbsrc = source.length;
		var nbvue = vue.length;
		console.log("nbsrc : " + nbsrc + " nbvue : " + nbvue);

		//Options
		var limite = $('#form_limite').val();
		if (limite == "") { limite = 2; }

		var relations = [];
		$('option:selected').each(function() {
			relations.push($(this).val());
		});
		var tabrelations = relations;
		if (relations.length == 0) { relations = 'all'; }
		else { relations = relations.join(','); }

		//Mot recherché
		var mot = $('#form_mot').val();

		console.log("layout a récupéré les options suivantes : ");
		console.log("mot recherché : " + mot);
		console.log("source : " + source);
		console.log("vue : " + vue);
		console.log("limite : " + limite);
		console.log("relations :" + relations);

		source.forEach( function(s,ns) {
			vue.forEach( function(v,nv) {
				$('#conteneurD3').html($('#conteneurD3').html() + '<div id="s'+ns+'v'+nv+'"></div>');
				$('#s' + ns+'v'+nv).css("position","absolute");
				$('#s' + ns+'v'+nv).css("left",ns * width / nbsrc);
				$('#s' + ns+'v'+nv).css("top",nv * height / nbvue);
				$('#s' + ns+'v'+nv).css("width",width / nbsrc + 'px');
				$('#s' + ns+'v'+nv).css("height",height / nbvue + 'px');
				$('#s' + ns+'v'+nv).css("overflow","hidden");
			});
		});

	//Utilisation d'ajax pour placer le résultat dans le conteneurD3

		//On alerte le visiteur si il n'a pas rempli correctement tous les champs
		if (source.length == 0) { alert('vous devez sélectionner une source de données'); }
		else if (vue.length == 0) { alert('vous devez sélectionner une représentation'); }
		else if (mot == '') { alert('vous devez entrer un mot'); }
		//Si il a bien tout rempli on fait le travail
		else 
		{ 
			source.forEach( function(src, numsrc) {
				console.log('layout va récupérer le json pour la source ' + src);
				//On récupère le json (layout l210)
				/*********************
					REPERE AJOUTER SOURCE
				**********************/
				if (src == 'wordnet') { 
					urlsrc = Routing.generate('sources_wordnet_json', { mot: mot, relations: relations, limite: limite });
				} 
				else if (src == 'dbpedia') { 
					urlsrc = Routing.generate('sources_db_pedia_json', { mot: mot, relations: relations, limite: limite });
				} 
				else if (src == 'debian') { 
					urlsrc = Routing.generate('sources_debian_json', { mot: mot, relations: relations, limite: limite });
				} 
				else if (src == 'humour') { 
					urlsrc = Routing.generate('sources_humour_json', { mot: mot, relations: relations, limite: limite });
				} 
				else if (src == 'getty') { 
					urlsrc = Routing.generate('sources_getty_json', { mot: mot, relations: relations, limite: limite });
				} 
				else { alert("Source " + src + " non prise en charge"); }
				console.log(urlsrc);

				vue.forEach(function(v) {
					//On enregistre la recherche dans l'historique
					console.log('enregistrement historique');
					urlhistorique = '{{ path("relais_relais_historique") }}';
					console.log(urlhistorique);
					$.post(
						urlhistorique,
						{
							"form[mot]":mot,
							"form[source]":src,
							"form[vue]":v,
							"form[limite]":limite,
							"form[relations][]":tabrelations,
						},
						function(data) { console.log(data); }
					);
				});


				//On récupère le json et on l'envoie à la source
				$.getJSON(
					urlsrc,
					//Quand on l'a récupéré : (layout l237)
					function(data)
					{
						console.log('layout a récupéré le json suivant :');
						console.log(data);
						console.log('layout appelle maintenant la vue à la route vues_representations_nomdemavue en lui donnant le json');
						vue.forEach(function(v,numvue) {
							//Il faut lancer le script adapté à la vue demandée
							/*********************
								REPERE AJOUTER VUE
							**********************/
							if (v == 'json') 
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_json') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); }
								});
							}
							else if (v == 'jsongraph') 
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_jsongraph') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); 	$('#loading').css('visibility','hidden'); }
								});
							}
							else if (v == 'jsontree') 
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_jsontree') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); 	$('#loading').css('visibility','hidden'); }
								});
							}
							else if (v == 'bubble') 
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_bubble') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); 	$('#loading').css('visibility','hidden');}
								});
							}
							else if (v == 'indented')
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_indented') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); 	$('#loading').css('visibility','hidden');}
								});
							}
							else if (v == 'force') 
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_force') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); 	$('#loading').css('visibility','hidden');}
								});
							}
							else if (v == 'radial') 
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_radial') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); 	$('#loading').css('visibility','hidden');}
								});
							}
							else if (v == 'matrice') 
							{ 
								$.ajax({
									type:"POST",
									url:"{{ path('vues_representations_matrice') }}",
									dataType:"script",
									data:{ 'data': JSON.stringify(data), 'nbsrc': nbsrc, 'nbvue': nbvue, 'numsrc': numsrc, 'numvue': numvue },
									cache:false,
									success:function() { console.log('success'); 	$('#loading').css('visibility','hidden');}
								});
							}
							else { alert('vue ' + v + ' non prise en charge'); 	$('#loading').css('visibility','hidden');}
						});
					}
				); 
			});
		}
})();

