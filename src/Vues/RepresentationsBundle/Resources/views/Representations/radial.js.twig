{% extends "VuesRepresentationsBundle::d3_formatter.js.twig" %}

{% block vue %}

/**
 * On traite le json pour insérer ce qu'on veut dans les conteneurs
 */
(function ()
{
	console.log('vous êtes dans radialvue');
	console.log('On a récupéré data :');
	console.log("{{ data }}");
	var jsonobjet = JSON.parse("{{ data }}");
	var formateur = new D3_Formatter();
	var jsontree = formateur.to_tree(jsonobjet);

	/*console.log('On le transforme en :');
	console.log(jsongraph);
	console.log('Puis on insère ce qu\'on veut dans les conteneurs');*/
	var jsonchaine = JSON.stringify(jsontree,false);
	$('#conteneurD3').css('visibility','visible');
	$('#conteneurD3').html('');
	//$('#conteneurpage').css('visibility','visible');
	$('#conteneurpage').html('<pre>' + jsonchaine + '</pre>');

		// On recupere la taille de la div pour mettre le svg
		var width = $('#conteneurmenu').innerWidth(),
		  height = $("#conteneurmenu").innerHeight();
	
		var diameter = width;

		var tree = d3.layout.tree()
				.size([360, 300])
				.separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });

		var diagonal = d3.svg.diagonal.radial()
				.projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });

		var svg = d3.select("#conteneurD3").append("svg")
				.attr("width", diameter)
				.attr("height", diameter - 150)
			.append("g")
				.attr("transform", "translate(" + diameter / 2 + "," + height / 2 + ")");

			var nodes = tree.nodes(jsontree),
				  links = tree.links(nodes);
			console.log(nodes);
			console.log(links);

			var link = svg.selectAll(".link")
				  .data(links)
				.enter().append("path")
				  .attr("class", "link")
				  .attr("d", diagonal);

			var node = svg.selectAll(".node")
				  .data(nodes)
				.enter().append("g")
				  .attr("class", "node")
				  .attr("transform", function(d) { return "rotate(" + (d.x - 90) + ")translate(" + d.y + ")"; })

			node.append("circle")
				  .attr("r", 4.5);

			node.append("text")
				  .attr("dy", ".31em")
				  .attr("text-anchor", function(d) { return d.x < 180 ? "start" : "end"; })
				  .attr("transform", function(d) { return d.x < 180 ? "translate(8)" : "rotate(180)translate(-8)"; })
				  .text(function(d) { return d.name; });

		d3.select(self.frameElement).style("height", diameter - 150 + "px");
	console.log('Fin : on a terminé d\'afficher la vue');
})();

{% endblock %}
