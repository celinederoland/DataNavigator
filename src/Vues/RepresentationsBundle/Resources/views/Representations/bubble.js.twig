{% extends "VuesRepresentationsBundle::d3_formatter.js.twig" %}

{% block vue %}

/**
 * On traite le json pour insérer ce qu'on veut dans les conteneurs
 */
(function ()
{
	console.log('vous êtes dans bubblevue');

	var jsonobjet = JSON.parse("{{ data }}");
	var formateur = new D3_Formatter();
	var jsontree = formateur.to_tree(jsonobjet);

	$('#conteneurD3').css('visibility','visible');
	$('#conteneurpage').css('visibility','hidden');

	//On crée deux sets de couleurs, un pour les noeuds, un pour les relations
	var ncolor = d3.scale.category10();
	var rcolor = d3.scale.category20();

	var view;

	// On recupere la taille de la div pour mettre le svg
	if ({{ nbsrc }} > {{ nbvue }})
	{
		var width = $('#conteneurmenu').innerWidth() / {{ nbsrc }} ,
			height = $("#conteneurmenu").innerHeight() / {{ nbvue }} - 50;

		var posw = {{ numsrc }}, posh = {{ numvue }};
		var nums = posw, numv = posh;
	}
	else
	{
		var width = $('#conteneurmenu').innerWidth() / {{ nbvue }} ,
			height = $("#conteneurmenu").innerHeight() / {{ nbsrc }} - 50;

		var posw = {{ numvue }}, posh = {{ numsrc }};
		var nums = posh, numv = posw;
	}


	var diameter = Math.min(width,height);

	//Le packlayout de D3 permet d'agencer des ensembles de cercles dans des cercles
	var pack = d3.layout.pack()
			.padding(5)
			.size([diameter, diameter])
			.value(function(d) { return d.size; })

	//On configure le svg qui contiendra toute la figure
	var conteneur = d3.select('#s' + nums + 'v' + numv).append("svg")
		.attr("width", width)
		.attr("height", height);

	var svg = conteneur.append("g")
			.attr("id",'s' + nums + 'v' + numv + 'dessin')
			.attr("depx",width/2)
			.attr("depy",height/2)
			.attr("rot",0)
			.attr("rotx",0)
			.attr("roty",0)
			.attr("sc",1)
			.attr("transform", "translate(" + ( width/2) + "," + ( height / 2) + ")");

	//On ajoute les outils
	var outils = new D3_Outils();

	//Palette
	var palette = conteneur.append("g").attr("transform","scale(2,2)translate(-30,0)");
	palette.append("rect")
		.attr("y","6.2338481")
		.attr("x","42.052032")
		.attr("height","41.805031")
		.attr("width","41.895943")
		.style("fill","#eef7fe")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	//Bouton central
	palette.append("rect")
		.attr("y","22.167587")
		.attr("x","58.076679")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	//zoomIn
	var btZoomIn = palette.append("g")
		.on("click",function() {  outils.zoom('#s' + nums + 'v' + numv,1/10); });

	btZoomIn.append("rect")
		.attr("y","9.2584982")
		.attr("x","45.258499")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinZoomIn = btZoomIn.append("g").attr("transform","translate(51.069231,1.0376558)");

	dessinZoomIn.append("path")
		.attr("d","M 3,17 -0.54545454,13.545455")
		.style("stroke","black");

	dessinZoomIn.append("path")
		.attr("d","m -2.875,2.59375 c 0,1.3807119 -1.1192881,2.5 -2.5,2.5 -1.3807119,0 -2.5,-1.1192881 -2.5,-2.5 0,-1.3807119 1.1192881,-2.5 2.5,-2.5 1.3807119,0 2.5,1.1192881 2.5,2.5 z")
		.attr("transform","translate(2.9632325,9.336453)")
		.attr("sodipodi:ry","2.5")
		.attr("sodipodi:rx","2.5")
		.attr("sodipodi:cy","2.59375")
		.attr("sodipodi:cx","-5.375")
		.attr("sodipodi:type","arc")
		.style("fill","none")
		.style("stroke","black");

	dessinZoomIn.append("path")
		.attr("d","m -2.3902631,10.848039 0,2")
		.style("stroke","black");

	dessinZoomIn.append("path")
		.attr("d","m -3.3902631,11.848039 2,0")
		.style("stroke","black");

	//zoomOut

	var btZoomOut = palette.append("g")
		.on("click",function() {  outils.zoom('#s' + nums + 'v' + numv,-1/10); });

	btZoomOut.append("rect")
		.attr("y","9.2584982")
		.attr("x","70.985771")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinZoomOut = btZoomOut.append("g").attr("transform","translate(51.069231,1.0376558)");

	dessinZoomOut.append("path")
		.attr("d","M 28.5,17 25.039413,13.545455")//M 3,17 -0.54545454,13.545455
		.style("stroke","black");

	dessinZoomOut.append("path")
		.attr("d","m -2.875,2.59375 c 0,1.3807119 -1.1192881,2.5 -2.5,2.5 -1.3807119,0 -2.5,-1.1192881 -2.5,-2.5 0,-1.3807119 1.1192881,-2.5 2.5,-2.5 1.3807119,0 2.5,1.1192881 2.5,2.5 z")
		.attr("transform","translate(28.5,9.336453)")
		.attr("sodipodi:ry","2.5")
		.attr("sodipodi:rx","2.5")
		.attr("sodipodi:cy","2.59375")
		.attr("sodipodi:cx","-5.375")
		.attr("sodipodi:type","arc")
		.style("fill","none")
		.style("stroke","black");

	dessinZoomOut.append("path")
		.attr("d","m 22,11.848039 2,0")
		.style("stroke","black");

	//deplacement haut
	var btHaut = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:0,y:-5}); });

	btHaut.append("rect")
		.attr("y","9.2584982")
		.attr("x","58.076679")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btHaut.append("path")
		.attr("d","m 62.01196,12.942506 0,5.136734 2.004719,0 0,-5.136734 2.00472,0.733819 -3.00708,-3.669096 -3.007079,3.669096 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//deplacement bas
	var btBas = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:0,y:5}); });

	btBas.append("rect")
		.attr("y","34.894859")
		.attr("x","58.076679")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btBas.append("path")
		.attr("d","m 62.01196,40.915352 0,-5.136734 2.004719,0 0,5.136734 2.00472,-0.733819 -3.00708,3.669096 -3.007079,-3.669096 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//deplacement gauche
	var btGauche = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:-5,y:0}); });

	btGauche.append("rect")
		.attr("y","22.258497")
		.attr("x","45.258499")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btGauche.append("path")
		.attr("d","m 49.14358,26.083883 5.136734,0 0,2.004719 -5.136734,0 0.733819,2.00472 -3.669096,-3.00708 3.669096,-3.007079 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//deplacement droite
	var btDroite = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:5,y:0}); });

	btDroite.append("rect")
		.attr("y","22.258497")
		.attr("x","70.985771")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btDroite.append("path")
		.attr("d","m 76.929446,26.112402 -5.136734,0 0,2.004719 5.136734,0 -0.733819,2.00472 3.669096,-3.00708 -3.669096,-3.007079 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//rotation gauche
	var btRotG = palette.append("g")
		.on("click",function() {  outils.rotate('#s' + nums + 'v' + numv,-1); });

	btRotG.append("rect")
		.attr("y","34.985771")
		.attr("x","45.258499")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinRotG = btRotG.append("g").attr("transform","matrix(0.71803091,-0.55567242,0.53210325,0.74983562,15.863061,26.496492)");

	dessinRotG.append("path")
		.attr("d","m -8.875,24.59375 c 0,1.932997 -1.567003,3.5 -3.5,3.5 -1.932997,0 -3.5,-1.567003 -3.5,-3.5 0,-1.932997 1.567003,-3.5 3.5,-3.5 0.483054,0 0.960879,0.09999 1.4034,0.293683")
		.attr("sodipodi:open","true")
		.attr("sodipodi:end","5.1249659")
		.attr("sodipodi:start","0")
		.attr("sodipodi:ry","3.5")
		.attr("sodipodi:rx","3.5")
		.attr("sodipodi:cy","24.59375")
		.attr("sodipodi:cx","-12.375")
		.attr("sodipodi:type","arc")
		.attr("transform","matrix(-1,0,0,1,10.125,9.90625)")
		.style("fill","none")
		.style("stroke","black");

	dessinRotG.append("path")
		.attr("d","m 21.849947,29.342391 -1.976221,2.134896 2.479798,1.2693")
		.style("fill","none")
		.style("stroke","black");

	//rotation droite

	var btRotD = palette.append("g")
		.on("click",function() {  outils.rotate('#s' + nums + 'v' + numv,-1); });

	btRotD.append("rect")
		.attr("y","34.985771")
		.attr("x","70.985771")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinRotD = btRotD.append("g").attr("transform","matrix(-0.71803091,-0.55567242,-0.53210325,0.74983562,110.37495,26.460729)");

	dessinRotD.append("path")
		.attr("d","m -8.875,24.59375 c 0,1.932997 -1.567003,3.5 -3.5,3.5 -1.932997,0 -3.5,-1.567003 -3.5,-3.5 0,-1.932997 1.567003,-3.5 3.5,-3.5 0.483054,0 0.960879,0.09999 1.4034,0.293683")
		.attr("sodipodi:open","true")
		.attr("sodipodi:end","5.1249659")
		.attr("sodipodi:start","0")
		.attr("sodipodi:ry","3.5")
		.attr("sodipodi:rx","3.5")
		.attr("sodipodi:cy","24.59375")
		.attr("sodipodi:cx","-12.375")
		.attr("sodipodi:type","arc")
		.attr("transform","matrix(-1,0,0,1,10.125,9.90625)")
		.style("fill","none")
		.style("stroke","black");

	dessinRotD.append("path")
		.attr("d","m 21.849947,29.342391 -1.976221,2.134896 2.479798,1.2693")
		.style("fill","none")
		.style("stroke","black");

	//focus indique sur quel noeud doit se centrer la vue (au départ c'est la racine)
	var focus = jsontree;
	console.log(jsontree);
	//view contiendra un vecteur correspondant au zoom sur le focus (vecteur (x,y,r) où (x,y) = coordonnées du centre et r = taille de la zone visible)
	var view;

	//pack.nodes transforme le jsontree en un objet contenant les infos nécessaires au packlayout.
	//ces infos sont calculées automatiquement par D3 à partir du json qu'on lui fournit.
	var nodes = pack.nodes(jsontree);



	//On ajoute les cercles représentant les noeuds de l'arbre
	var circle = svg.selectAll("circle")
			.data(nodes)
		.enter().append("circle")
			.attr("class", function(d) { return d.parent ? d.children ? "node" : "node node--leaf" : "node node--jsontree"; })
			.style("fill", function(d) { return d.children ? ncolor(d.depth) : null; })
			.on("click", function(d) {
					if (focus !== d) zoomfonc(d), d3.event.stopPropagation();
			})

	//On ajoute le texte représentant le noeud dans chaque cercle.
	var text = svg.selectAll("text")
			.data(nodes)
		.enter()
			.append("text")
			.style("font-size", function(d) { return 2*Math.sqrt(d.r) + 'px'; } )
			.text(function(d) { 
				return ( d.type != "N" && d.type != "R" && d.type != "V" && d.type != "A" && d.name.length < 30) ? d.name : ''; 
			})
			.attr("cursor","move")
			.on("dblclick",function(d) {
				outils = new D3_Outils();
				outils.relancer(d.name);
			});

	var node = svg.selectAll("circle,text");

	zoomTo([jsontree.x, jsontree.y, jsontree.r * 2]);

	//Lance le zoom sur un noeud
	function zoomfonc(d) {
		focus = d;

		var transition = d3.transition()
				.duration(500)
				.tween("zoom", function(d) {
					var i = d3.interpolateZoom(view, [focus.x, focus.y, focus.r * 2]);
					return function(t) { zoomTo(i(t)); };
				});
	}

	//Zoom sur une position
	function zoomTo(v) {
		var k = diameter / v[2]; view = v;
		circle.attr("transform", function(d) { return "translate(" + (d.x - v[0]) * k + "," + (d.y - v[1]) * k + ")"; });
		text.attr("transform", function(d) { return "translate(" + (d.x - v[0] - d.r / 1.5) * k + "," + (d.y - v[1]) * k + ")"; });
		circle.attr("r", function(d) { return d.r * k; });
		text.style("font-size", function(d) { return 2*Math.sqrt(d.r) * k + 'px'; });
	}

	//On adapte la taille de la figure à la taille du conteneur
	d3.select(self.frameElement).style("height", diameter + "px");
	
	
	// On ajoute des etiquettes sur les noeuds
	$('svg g circle').tipsy({ 
		gravity: 'w', 
		html: true, 
		title: function() {
			var d = this.__data__;
			return "<div>"+ d.type + "</div><div class='floatingp'>" + d.name + "</div><p>" + d.description + "</p>";
		}
	});

	svg.attr("transform","translate(" + width/2 + "," + height/2 + ")");

	console.log('Fin : on a terminé d\'afficher la vue');
})();

{% endblock %}
