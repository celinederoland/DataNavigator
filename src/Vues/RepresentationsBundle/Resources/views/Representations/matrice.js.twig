{% extends "VuesRepresentationsBundle::d3_formatter.js.twig" %}

{% block vue %}

/**
 * On traite le json pour insérer ce qu'on veut dans les conteneurs
 */
(function ()
{
	console.log('vous êtes dans bubblevue');

	var jsonobjet = JSON.parse("{{ data }}");
	var formateur = new D3_Formatter();
	var jsongraph = formateur.to_graph(jsonobjet);

	$('#conteneurD3').css('visibility','visible');
	$('#conteneurpage').css('visibility','hidden');

	//On construit la matrice
	var matrix = [],
		nodes = jsongraph.nodes,
		n = nodes.length;

	// Compute index per node.
	nodes.forEach(function(node, i) {
		node.index = i;
		matrix[i] = d3.range(n).map(function(j) { return { x: j, y: i, rel: {} }; } );
	});

	// Convert links to matrix; count character occurrences.
	jsongraph.links.forEach(function(link) {
		matrix[link.source][link.target].rel = link;
		matrix[link.target][link.source].rel = link;
	});

	console.log(matrix);

	//On crée deux sets de couleurs, un pour les noeuds, un pour les relations
	var ncolor = d3.scale.category10();
	var rcolor = d3.scale.category20();

	// On recupere la taille de la div pour mettre le svg
	if ({{ nbsrc }} > {{ nbvue }})
	{
		var width = $('#conteneurmenu').innerWidth() / {{ nbsrc }} ,
			height = $("#conteneurmenu").innerHeight() / {{ nbvue }} - 50;

		var posw = {{ numsrc }}, posh = {{ numvue }};
		var nums = posw, numv = posh;
	}
	else
	{
		var width = $('#conteneurmenu').innerWidth() / {{ nbvue }} ,
			height = $("#conteneurmenu").innerHeight() / {{ nbsrc }} - 50;

		var posw = {{ numvue }}, posh = {{ numsrc }};
		var nums = posh, numv = posw;
	}

	var barHeight = height / (1.8*n),
		barWidth = width / (1.8*n);

	//On ajoute un objet svg centré, qui contiendra le dessin
	var conteneur = d3.select('#s' + nums + 'v' + numv).append("svg")
		.attr("width", width)
		.attr("height", height);

	var svg = conteneur.append("g")
			.attr("id",'s' + nums + 'v' + numv + 'dessin')
			.attr("depx",(width - n*barWidth) / 2)
			.attr("depy",(height - n*barHeight) / 2)
			.attr("rot",0)
			.attr("rotx",width/4)
			.attr("roty",height/4)
			.attr("sc",1)
			.attr("transform", "translate(" + (width - n*barWidth) / 2 + "," + (height - n*barHeight) / 2 + ")");

	//Image de fond
	svg.append("rect")
			.style("fill", "white")
			.style("stroke","black")
			.attr("width", n * barWidth)
			.attr("height", n * barHeight);

	//On ajoute les outils
	var outils = new D3_Outils();

	//Palette
	var palette = conteneur.append("g").attr("transform","scale(2,2)translate(-30,0)");
	palette.append("rect")
		.attr("y","6.2338481")
		.attr("x","42.052032")
		.attr("height","41.805031")
		.attr("width","41.895943")
		.style("fill","#eef7fe")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	//Bouton central
	palette.append("rect")
		.attr("y","22.167587")
		.attr("x","58.076679")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	//zoomIn
	var btZoomIn = palette.append("g")
		.on("click",function() {  outils.zoom('#s' + nums + 'v' + numv,1/10); });

	btZoomIn.append("rect")
		.attr("y","9.2584982")
		.attr("x","45.258499")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinZoomIn = btZoomIn.append("g").attr("transform","translate(51.069231,1.0376558)");

	dessinZoomIn.append("path")
		.attr("d","M 3,17 -0.54545454,13.545455")
		.style("stroke","black");

	dessinZoomIn.append("path")
		.attr("d","m -2.875,2.59375 c 0,1.3807119 -1.1192881,2.5 -2.5,2.5 -1.3807119,0 -2.5,-1.1192881 -2.5,-2.5 0,-1.3807119 1.1192881,-2.5 2.5,-2.5 1.3807119,0 2.5,1.1192881 2.5,2.5 z")
		.attr("transform","translate(2.9632325,9.336453)")
		.attr("sodipodi:ry","2.5")
		.attr("sodipodi:rx","2.5")
		.attr("sodipodi:cy","2.59375")
		.attr("sodipodi:cx","-5.375")
		.attr("sodipodi:type","arc")
		.style("fill","none")
		.style("stroke","black");

	dessinZoomIn.append("path")
		.attr("d","m -2.3902631,10.848039 0,2")
		.style("stroke","black");

	dessinZoomIn.append("path")
		.attr("d","m -3.3902631,11.848039 2,0")
		.style("stroke","black");

	//zoomOut

	var btZoomOut = palette.append("g")
		.on("click",function() {  outils.zoom('#s' + nums + 'v' + numv,-1/10); });

	btZoomOut.append("rect")
		.attr("y","9.2584982")
		.attr("x","70.985771")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinZoomOut = btZoomOut.append("g").attr("transform","translate(51.069231,1.0376558)");

	dessinZoomOut.append("path")
		.attr("d","M 28.5,17 25.039413,13.545455")//M 3,17 -0.54545454,13.545455
		.style("stroke","black");

	dessinZoomOut.append("path")
		.attr("d","m -2.875,2.59375 c 0,1.3807119 -1.1192881,2.5 -2.5,2.5 -1.3807119,0 -2.5,-1.1192881 -2.5,-2.5 0,-1.3807119 1.1192881,-2.5 2.5,-2.5 1.3807119,0 2.5,1.1192881 2.5,2.5 z")
		.attr("transform","translate(28.5,9.336453)")
		.attr("sodipodi:ry","2.5")
		.attr("sodipodi:rx","2.5")
		.attr("sodipodi:cy","2.59375")
		.attr("sodipodi:cx","-5.375")
		.attr("sodipodi:type","arc")
		.style("fill","none")
		.style("stroke","black");

	dessinZoomOut.append("path")
		.attr("d","m 22,11.848039 2,0")
		.style("stroke","black");

	//deplacement haut
	var btHaut = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:0,y:-5}); });

	btHaut.append("rect")
		.attr("y","9.2584982")
		.attr("x","58.076679")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btHaut.append("path")
		.attr("d","m 62.01196,12.942506 0,5.136734 2.004719,0 0,-5.136734 2.00472,0.733819 -3.00708,-3.669096 -3.007079,3.669096 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//deplacement bas
	var btBas = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:0,y:5}); });

	btBas.append("rect")
		.attr("y","34.894859")
		.attr("x","58.076679")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btBas.append("path")
		.attr("d","m 62.01196,40.915352 0,-5.136734 2.004719,0 0,5.136734 2.00472,-0.733819 -3.00708,3.669096 -3.007079,-3.669096 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//deplacement gauche
	var btGauche = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:-5,y:0}); });

	btGauche.append("rect")
		.attr("y","22.258497")
		.attr("x","45.258499")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btGauche.append("path")
		.attr("d","m 49.14358,26.083883 5.136734,0 0,2.004719 -5.136734,0 0.733819,2.00472 -3.669096,-3.00708 3.669096,-3.007079 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//deplacement droite
	var btDroite = palette.append("g")
		.on("click",function() {  outils.bouger('#s' + nums + 'v' + numv,{x:5,y:0}); });

	btDroite.append("rect")
		.attr("y","22.258497")
		.attr("x","70.985771")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	btDroite.append("path")
		.attr("d","m 76.929446,26.112402 -5.136734,0 0,2.004719 5.136734,0 -0.733819,2.00472 3.669096,-3.00708 -3.669096,-3.007079 z")
		.style("fill","lightgrey")
		.style("stroke","black")
		.style("stroke-width","0.3");

	//rotation gauche
	var btRotG = palette.append("g")
		.on("click",function() {  outils.rotate('#s' + nums + 'v' + numv,-1); });

	btRotG.append("rect")
		.attr("y","34.985771")
		.attr("x","45.258499")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinRotG = btRotG.append("g").attr("transform","matrix(0.71803091,-0.55567242,0.53210325,0.74983562,15.863061,26.496492)");

	dessinRotG.append("path")
		.attr("d","m -8.875,24.59375 c 0,1.932997 -1.567003,3.5 -3.5,3.5 -1.932997,0 -3.5,-1.567003 -3.5,-3.5 0,-1.932997 1.567003,-3.5 3.5,-3.5 0.483054,0 0.960879,0.09999 1.4034,0.293683")
		.attr("sodipodi:open","true")
		.attr("sodipodi:end","5.1249659")
		.attr("sodipodi:start","0")
		.attr("sodipodi:ry","3.5")
		.attr("sodipodi:rx","3.5")
		.attr("sodipodi:cy","24.59375")
		.attr("sodipodi:cx","-12.375")
		.attr("sodipodi:type","arc")
		.attr("transform","matrix(-1,0,0,1,10.125,9.90625)")
		.style("fill","none")
		.style("stroke","black");

	dessinRotG.append("path")
		.attr("d","m 21.849947,29.342391 -1.976221,2.134896 2.479798,1.2693")
		.style("fill","none")
		.style("stroke","black");

	//rotation droite

	var btRotD = palette.append("g")
		.on("click",function() {  outils.rotate('#s' + nums + 'v' + numv,-1); });

	btRotD.append("rect")
		.attr("y","34.985771")
		.attr("x","70.985771")
		.attr("height","10.028458")
		.attr("width","9.7557306")
		.style("fill","white")
		.style("stroke","lightgrey")
		.style("stroke-width","0.5");

	var dessinRotD = btRotD.append("g").attr("transform","matrix(-0.71803091,-0.55567242,-0.53210325,0.74983562,110.37495,26.460729)");

	dessinRotD.append("path")
		.attr("d","m -8.875,24.59375 c 0,1.932997 -1.567003,3.5 -3.5,3.5 -1.932997,0 -3.5,-1.567003 -3.5,-3.5 0,-1.932997 1.567003,-3.5 3.5,-3.5 0.483054,0 0.960879,0.09999 1.4034,0.293683")
		.attr("sodipodi:open","true")
		.attr("sodipodi:end","5.1249659")
		.attr("sodipodi:start","0")
		.attr("sodipodi:ry","3.5")
		.attr("sodipodi:rx","3.5")
		.attr("sodipodi:cy","24.59375")
		.attr("sodipodi:cx","-12.375")
		.attr("sodipodi:type","arc")
		.attr("transform","matrix(-1,0,0,1,10.125,9.90625)")
		.style("fill","none")
		.style("stroke","black");

	dessinRotD.append("path")
		.attr("d","m 21.849947,29.342391 -1.976221,2.134896 2.479798,1.2693")
		.style("fill","none")
		.style("stroke","black");

	//Lignes
	var l = 0;

	var row = svg.selectAll(".row")
			.data(matrix)
		.enter().append("g")
			.attr("class", "row")
			.attr("transform", function(d, i) { return "translate(0," + i * barHeight + ")"; })
			.each(row).each(inseretxtligne);

	function inseretxtligne(row) {
		var t = d3.select(this).selectAll("text")
				.data(function(row) { return [ nodes[row[l++].x] ]; })
			.enter().append("text")
			.attr("x", -6)
			.attr("y", barHeight/2)
			.style("font-size", barHeight + 'px')
			.style("fill", function(d) { return ncolor(d.group); })
			.attr("text-anchor", "end")
			.text(function(d, i) { return d.name; })
			.attr("cursor","move")
			.on("dblclick",function(d) {
				outils = new D3_Outils();
				outils.relancer(d.name);
			});
	}

	//Cellules = Relations
	function row(row) {
		var cell = d3.select(this).selectAll(".cell")
				.data(row)
			.enter().append("rect")
				.attr("class","mesrel")
				.attr("x", function(d, i) { return d.x * barWidth; })
				.attr("width", barWidth)
				.attr("height", barHeight)
				//.style("stroke", function(d) { return d.rel.name ? "black" : "white"; })
				.style("fill", function(d) { return d.rel.name ? rcolor(d.rel.name[0]) : "#feffe4"; })
				//.style("fill-opacity", function(d) { return d.rel.name ? 0.8 : 0; })
				.on("mouseover", mouseover);
				//.on("mouseout", mouseout);
	}
	$('.mesrel').tipsy({ 
		gravity: 'w', 
		html: true, 
		title: function() { 
			var d = this.__data__;
			//return "coucou";
			if (d.rel.name) {
				return '<div class="floatingp">Relation</div><p>sujet : ' + nodes[d.rel.source].name + ' </p> ' + '<div class="floatingp">' + d.rel.name[0] + '</div><p>' + ' objet : ' + nodes[d.rel.target].name + '</p>'; 
			}
			return '';
		}
	});

	//Colonnes
	var column = svg.selectAll(".column")
			.data(matrix)
		.enter().append("g")
			.attr("class", "column")
			.attr("transform", function(d, i) { return "rotate(-90)translate(0," + i * barWidth + ")"; })
			.each(inseretxtcol);

	column.append("line")
			.attr("x1", -width);

	function inseretxtcol(column) {
		var t = d3.select(this).selectAll("text")
				.data(function(column, i) { return [ nodes[column[i].y] ]; })
			.enter().append("text")
			.attr("x", 6)
			.attr("y", barHeight/2)
			.style("font-size", barHeight + 'px')
			.style("fill", function(d) { return ncolor(d.group); })
			.attr("text-anchor", "start")
			.text(function(d, i) { return d.name; })
			.attr("cursor","move")
			.on("dblclick",function(d) {
				outils = new D3_Outils();
				outils.relancer(d.name);
			});
	}

	//Ajout des étiquettes sur les noeuds
	$('svg g text').tipsy({ 
		gravity: 'e', 
		html: true, 
		title: function() {
			var d = this.__data__;
			return "<div>"+ d.type + "</div><div class='floatingp'>" + d.name + "</div><p>" + d.description + "</p>";
		}
	});

	//Highlighter lorsqu'on passe sur une ligne
	function mouseover(p) {
		d3.selectAll("rect").classed("activecell", function(d) { if (!d) { return false; } return (d.x == p.x || d.y == p.y); });
		d3.selectAll(".row").classed("active", function(d, i) { return i == p.y; });
		d3.selectAll(".column").classed("active", function(d, i) { return i == p.x; });
	}

	console.log('Fin : on a terminé d\'afficher la vue');
})();

{% endblock %}
